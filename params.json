{"name":"Undoing Style in Cascading Style Sheets","tagline":"Master thesis - Leonard Punt - Universiteit van Amsterdam","body":"Supervisors: Sjoerd Visscher and Vadim Zaytsev\r\nHost organisation: Q42, http://q42.com\r\n\r\n### Abstract\r\nCascading Style Sheets (CSS) is a language used for defining the presentation semantics of web documents. CSS is widely used. Despite the relatively simple syntax of CSS, CSS code is not easily understood and maintained. The language has a number of complex features, like inheritance, cascading, and specificity. Next to that, established design principles and tool support are missing.\r\n\r\nTherefore, one of the consequences is that it is common for CSS code to contain code smells. A code smell is a pattern of code that indicates a weakness in the design. Such a weakness may cause issues in code understanding and maintenance in the long term.\r\n\r\nOne of these code smells is undoing style. In this thesis, we propose a technique that detects undoing style in CSS code and recommends refactoring opportunities to eliminate those undoing styles, while preserving the semantics of the web application.\r\nWe evaluate our technique on 41 real-world web applications, and outline a proof of correctness for our refactoring. Our findings show that the amount of undoing style is extensive in CSS code. Additionally, there are quite a few refactorings that can be applied, while introducing barely any errors.\r\n\r\n### Downloads\r\n* Thesis\r\n* Tool\r\n* Dataset\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}